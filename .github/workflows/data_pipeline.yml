name: DataPipeline

on:
  workflow_dispatch: 
  schedule:
    - cron:  '0 10 * * *'

jobs:
  scrape_pdf:
    runs-on: ubuntu-latest
    env:
      PDF_SOURCE: 'http://stopcoronavirus.mcgm.gov.in/assets/docs/Dashboard.pdf'
      PDF_FILE_PATH: '/tmp/stopcovid-dashboard.pdf'
    steps:
      - name: Check out this repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
      - name: Download and scrap data from PDF dashboard file.
        run: |
          python -m pdf_scrapper download-pdf --dashboard-pdf-url $PDF_SOURCE --output $PDF_FILE_PATH
      - name: Exact data from pdf file
        run: python -m pdf_scrapper scrap-pdf $PDF_FILE_PATH csv/positive-wards
      - run: |
            git config user.name github-actions
            git config user.email github-actions@github.com
            git stash save -u -a
            git fetch origin gh-pages
            git checkout gh-pages
            git stash pop
            git add csv/*
            git commit -m "pushing result csv"
            git push
  
        
  covid19india_metrics:
    runs-on: ubuntu-latest
    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    - name: Check out this repo
      uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt
    - name: Extract history from covid19india API
      env:
        OUTPUT_PATH: './csv/data/city-stats-${{steps.date.outputs.date}}.csv'
      run: python data_pipeline/extract_history_command.py --states-and-districts MH Mumbai --output-file $OUTPUT_PATH
    - name: Calculate metrics from history file.
      env:
        INPUT_PATH: './csv/data/city-stats-${{steps.date.outputs.date}}.csv'
        OUTPUT_PATH: './csv/data/metrics-${{steps.date.outputs.date}}.csv'
      run: python data_pipeline/calculate_metrics.py --input-path $INPUT_PATH --output-path $OUTPUT_PATH
    - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git stash save -u -a
          git fetch origin gh-pages
          git checkout gh-pages
          git stash pop
          git add csv/*
          git commit -m "pushing result csv"
          git push
